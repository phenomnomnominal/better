// BETTERER RESULTS V1.
exports[`no hack comments`] = {
  timestamp: 1589338467072,
  value: `{
    "packages/cli/src/cli.ts:2439790794": [
      [12, 0, 7, "RegExp match", "645651780"]
    ],
    "packages/cli/src/init.ts:4030003562": [
      [91, 4, 7, "RegExp match", "645651780"]
    ]
  }`
};
exports[`no raw console.log`] = {
  timestamp: 1589384448404,
  value: `{
    "packages/betterer/src/results/diff.ts:1023811315": [
      [21, 4, 11, "TSQuery match", "3870399096"]
    ]
  }`
};
exports[`@typescript-eslint/ban-types`] = {
  timestamp: 1592972177676,
  value: `{
    "packages/betterer/src/context/context.ts:3853906370": [
      [29, 19, 8, "Don\'t use \`Function\` as a type. The \`Function\` type accepts any function-like value.\\nIt provides no type safety when calling the function, which can be a common source of bugs.\\nIt also accepts things like class declarations, which will throw at runtime as they will not be called with \`new\`.\\nIf you are expecting the function to accept certain arguments, you should explicitly define the function shape.", "4136871687"]
    ],
    "packages/betterer/src/utils.ts:38796100": [
      [2, 53, 8, "Don\'t use \`Function\` as a type. The \`Function\` type accepts any function-like value.\\nIt provides no type safety when calling the function, which can be a common source of bugs.\\nIt also accepts things like class declarations, which will throw at runtime as they will not be called with \`new\`.\\nIf you are expecting the function to accept certain arguments, you should explicitly define the function shape.", "4136871687"]
    ]
  }`
};
exports[`@typescript-eslint/restrict-template-expressions`] = {
  timestamp: 1592972180845,
  value: `{
    "packages/betterer/src/errors.ts:3973991685": [
      [7, 96, 10, "Invalid type \\"string | Error | BettererError\\" of template literal expression.", "3805115554"],
      [8, 99, 11, "Invalid type \\"string | Error | BettererError\\" of template literal expression.", "2365839858"],
      [9, 99, 11, "Invalid type \\"string | Error | BettererError\\" of template literal expression.", "2365839858"]
    ],
    "packages/cli/src/errors.ts:4053971182": [
      [2, 90, 10, "Invalid type \\"string | Error | BettererError\\" of template literal expression.", "3805115554"]
    ],
    "packages/cli/src/init.ts:4030003562": [
      [96, 55, 7, "Invalid type \\"any\\" of template literal expression.", "800248767"]
    ]
  }`
};
exports[`@typescript-eslint/no-floating-promises`] = {
  timestamp: 1592972181588,
  value: `{
    "packages/betterer/src/watcher/watcher.ts:4224050771": [
      [62, 4, 28, "Promises must be handled appropriately or explicitly marked as ignored with the \`void\` operator.", "233133894"]
    ],
    "packages/cli/src/watch.ts:2535787765": [
      [24, 6, 15, "Promises must be handled appropriately or explicitly marked as ignored with the \`void\` operator.", "733721943"]
    ],
    "packages/extension/src/client/commands/disable.ts:1676199082": [
      [11, 4, 42, "Promises must be handled appropriately or explicitly marked as ignored with the \`void\` operator.", "829060112"],
      [17, 4, 41, "Promises must be handled appropriately or explicitly marked as ignored with the \`void\` operator.", "2714035641"]
    ],
    "packages/extension/src/client/commands/enable.ts:240861284": [
      [11, 4, 41, "Promises must be handled appropriately or explicitly marked as ignored with the \`void\` operator.", "3801738949"],
      [17, 4, 40, "Promises must be handled appropriately or explicitly marked as ignored with the \`void\` operator.", "2505016204"]
    ],
    "packages/extension/src/client/commands/init.ts:2622237704": [
      [14, 4, 39, "Promises must be handled appropriately or explicitly marked as ignored with the \`void\` operator.", "2731829246"],
      [24, 4, 43, "Promises must be handled appropriately or explicitly marked as ignored with the \`void\` operator.", "4071897381"]
    ],
    "packages/extension/src/client/extension.ts:1878081441": [
      [60, 4, 27, "Promises must be handled appropriately or explicitly marked as ignored with the \`void\` operator.", "1648678109"]
    ],
    "packages/extension/src/client/requests/state.ts:545404786": [
      [23, 4, 48, "Promises must be handled appropriately or explicitly marked as ignored with the \`void\` operator.", "3664587686"]
    ],
    "packages/extension/src/client/settings.ts:3918432042": [
      [23, 2, 40, "Promises must be handled appropriately or explicitly marked as ignored with the \`void\` operator.", "2460760654"]
    ],
    "packages/extension/src/client/status.ts:3141128984": [
      [28, 4, 25, "Promises must be handled appropriately or explicitly marked as ignored with the \`void\` operator.", "3494514196"],
      [74, 6, 32, "Promises must be handled appropriately or explicitly marked as ignored with the \`void\` operator.", "694099710"]
    ],
    "packages/extension/src/server/server.ts:2004201515": [
      [62, 4, 68, "Promises must be handled appropriately or explicitly marked as ignored with the \`void\` operator.", "280309533"],
      [63, 4, 71, "Promises must be handled appropriately or explicitly marked as ignored with the \`void\` operator.", "2936064845"],
      [69, 6, 27, "Promises must be handled appropriately or explicitly marked as ignored with the \`void\` operator.", "3607138074"]
    ],
    "packages/extension/src/server/validator.ts:3637606391": [
      [47, 10, 90, "Promises must be handled appropriately or explicitly marked as ignored with the \`void\` operator.", "1821734533"],
      [93, 12, 94, "Promises must be handled appropriately or explicitly marked as ignored with the \`void\` operator.", "2449957056"]
    ]
  }`
};
exports[`@typescript-eslint/no-unsafe-assignment`] = {
  timestamp: 1592972182811,
  value: `{
    "packages/betterer/src/context/context.ts:3853906370": [
      [146, 6, 9, "Unsafe assignment of an any value.", "166477157"]
    ],
    "packages/betterer/src/register.ts:845928349": [
      [17, 8, 39, "Unsafe assignment of an any value.", "2552944516"],
      [20, 8, 29, "Unsafe assignment of an any value.", "4025951506"]
    ],
    "packages/betterer/src/require.ts:3480205399": [
      [5, 8, 24, "Unsafe assignment of an any value.", "3354533529"]
    ],
    "packages/betterer/src/results/deserialiser.ts:3618777338": [
      [4, 8, 31, "Unsafe assignment of an any value.", "624767152"]
    ],
    "packages/cli/src/cli.ts:2439790794": [
      [16, 6, 40, "Unsafe assignment of an any value.", "959029483"]
    ],
    "packages/cli/src/init.ts:4030003562": [
      [74, 4, 69, "Unsafe assignment of an any value.", "3315440333"],
      [79, 2, 47, "Unsafe assignment of an any value.", "4106472126"],
      [87, 2, 63, "Unsafe assignment of an any value.", "4237347454"],
      [95, 10, 40, "Unsafe assignment of an any value.", "959029483"]
    ],
    "packages/extension/src/server/betterer.ts:4211891793": [
      [16, 8, 24, "Unsafe assignment of an any value.", "1072779174"],
      [17, 8, 34, "Unsafe assignment of an any value.", "1696192854"]
    ],
    "packages/extension/src/server/config.ts:3376275560": [
      [12, 4, 23, "Unsafe assignment of an any value.", "4217090156"],
      [13, 4, 7, "Unsafe assignment of an any value.", "1789297334"],
      [14, 4, 11, "Unsafe assignment of an any value.", "2365839858"],
      [15, 4, 55, "Unsafe assignment of an any value.", "1958731456"]
    ],
    "packages/extension/src/server/notifications/validate.ts:2562732250": [
      [18, 4, 38, "Unsafe asignment of type Map<any, any> to a variable of type Map<string, { handler: NotificationHandler<TextDocument>; versionProvider: BettererVersionProvider; }>.", "2572650248"]
    ],
    "packages/extension/src/server/validator.ts:3637606391": [
      [79, 16, 26, "Unsafe assignment of an any value.", "3761557800"],
      [81, 16, 31, "Unsafe assignment of an any value.", "3291696295"]
    ],
    "packages/typescript/src/typescript.ts:3207668848": [
      [20, 12, 6, "Unsafe array destructuring of a tuple element with an any value.", "1544266319"],
      [21, 10, 28, "Unsafe assignment of an any value.", "1730011879"],
      [24, 10, 85, "Unsafe assignment of an any value.", "1072556674"],
      [28, 4, 44, "Unsafe assignment of an any value.", "2615138127"]
    ],
    "test/cli/betterer-init.spec.ts:41535933": [
      [23, 10, 57, "Unsafe assignment of an any value.", "1827640456"]
    ],
    "test/cli/betterer-version.spec.ts:2875213250": [
      [6, 10, 56, "Unsafe assignment of an any value.", "702246347"]
    ],
    "test/fixture.ts:4010096081": [
      [83, 10, 33, "Unsafe assignment of an any value.", "2802723694"]
    ]
  }`
};
exports[`@typescript-eslint/no-unsafe-call`] = {
  timestamp: 1592972183779,
  value: `{
    "packages/betterer/src/register.ts:845928349": [
      [38, 4, 2, "Unsafe call of an any typed value.", "5862300"]
    ],
    "test/fixture.ts:4010096081": [
      [83, 24, 13, "Unsafe call of an any typed value.", "2353790866"]
    ]
  }`
};
exports[`@typescript-eslint/no-unsafe-member-access`] = {
  timestamp: 1592972184598,
  value: `{
    "packages/betterer/src/register.ts:845928349": [
      [20, 13, 24, "Unsafe member access [JS_EXTENSION] on an any value.", "1928379798"],
      [22, 7, 24, "Unsafe member access [TS_EXTENSION] on an any value.", "1899174408"],
      [37, 2, 29, "Unsafe member access [RESULTS_EXTENTION] on an any value.", "1793441202"]
    ],
    "packages/betterer/src/require.ts:3480205399": [
      [6, 9, 9, "Unsafe member access .default on an any value.", "3809326797"],
      [18, 9, 17, "Unsafe member access .default on an any value.", "3645928756"]
    ],
    "packages/cli/src/init.ts:4030003562": [
      [79, 2, 19, "Unsafe member access .scripts on an any value.", "3595083989"],
      [79, 24, 19, "Unsafe member access .scripts on an any value.", "3595083989"],
      [80, 6, 19, "Unsafe member access .scripts on an any value.", "3595083989"],
      [84, 4, 19, "Unsafe member access .scripts on an any value.", "3595083989"],
      [87, 2, 27, "Unsafe member access .devDependencies on an any value.", "2927433783"],
      [87, 32, 27, "Unsafe member access .devDependencies on an any value.", "2927433783"],
      [88, 6, 27, "Unsafe member access .devDependencies on an any value.", "2927433783"],
      [96, 4, 27, "Unsafe member access .devDependencies on an any value.", "2927433783"]
    ],
    "packages/extension/src/server/betterer.ts:4211891793": [
      [17, 26, 16, "Unsafe member access .betterer on an any value.", "2086049363"]
    ],
    "packages/extension/src/server/validator.ts:3637606391": [
      [71, 44, 17, "Computed name [file.relativePath] resolves to an any value.", "50828020"]
    ],
    "packages/typescript/src/typescript.ts:3207668848": [
      [28, 4, 22, "Unsafe member access .compilerOptions on an any value.", "3579262450"]
    ],
    "test/cli/betterer-init.spec.ts:41535933": [
      [25, 11, 19, "Unsafe member access .scripts on an any value.", "3595083989"],
      [26, 11, 27, "Unsafe member access .devDependencies on an any value.", "2927433783"]
    ],
    "test/fixture.ts:4010096081": [
      [83, 24, 13, "Unsafe member access .split on an any value.", "2353790866"]
    ]
  }`
};
exports[`@typescript-eslint/no-unsafe-return`] = {
  timestamp: 1592972185416,
  value: `{
    "packages/betterer/src/config/config.ts:3840038520": [
      [30, 2, 72, "Unsafe return of an any[] typed value", "2233173152"]
    ],
    "packages/betterer/src/require.ts:3480205399": [
      [6, 2, 22, "Unsafe return of an any typed value", "880393137"],
      [18, 2, 38, "Unsafe return of an any typed value", "2611709393"]
    ],
    "packages/extension/src/server/config.ts:3376275560": [
      [21, 2, 59, "Unsafe return of type Promise<any> from function with return type Promise<WorkspaceConfiguration>.", "3903064458"]
    ]
  }`
};